c
cccccccccccccc
ccccccccccccc
cc
c
cccccccccccc
            business_addresses = BusinessAddress.create_business_addresses(address_hash,@business.id)
c
@comment_ratings.as_json(:except => [:created_at, :updated_at], :methods => [:app_user_name, :app_user_image_url, :comment_date])
@comment_ratings.as_json(:except => [:created_at, :updated_at], :methods => [decode_api_data(:app_user_name), :app_user_image_url, :comment_date])
@comment_ratings.as_json(:except => [:created_at, :updated_at], :methods => [decode_api_data(app_user.app_user_name), :app_user_image_url, :comment_date])
@comment_ratings.as_json(:except => [:created_at, :updated_at], :methods => [decode_api_data(:app_user_name), :app_user_image_url, :comment_date])
@comment_ratings.as_json(:except => [:created_at, :updated_at], :methods => [:app_user_name, :app_user_image_url, :comment_date])
comment_ratings.as_json(:except => [:created_at, :updated_at], :methods => [:app_user_name, :app_user_image_url, :comment_date])
vsda
@comment_ratings
c
@average_rating
@comment_ratings 
c
@comment_ratings 
dcsa
c
 @current.present?
 @current.present
  @service_preferences_data
c
bundle_deals = Deal.find_by_sql("select deals.* from deals inner join bundle_deal_attributes bda on bda.deal_id = deals.id where bundle_combo like '%#{category_name}%' order by effective_price asc limit 5")
bundle_deals = Deal.find_by_sql("select deals.* from deals
category_name = ServiceCategory.get_category_name_by_id(category_id)
self
c
params
c
params
c
params
c
params
c
@app_user
@app_user.save!
@app_user.primary_id_number = params[:primary_id_number] 
@app_user = AppUser.find(session[:user_id])
params
c
 @app_user.primary_id_number = params[:primary_id_number] 
@app_user = AppUser.find(session[:user_id])
params
c
params
c
params
c
params[:app_user_addresses]
params
c
address
params[:app_user_addresses]
c
params[:app_user_addresses]
address
    params[:app_user_addresses].each do |address|
    app_user_addresses = []
params
c
params[:app_user_addresses]
params
c
 app_user_addresses = AppUserAddress.create_app_user_addresses(params,app_user.id)
app_user.user_type == AppUser::BUSINESS
params
c
params[:order_equipments]
params
c
item[key]
item[:key]
item
params[:order_items]
item
c
params
c
equipment[value]
equipment[key]
equipment ={"equipment_id"=>"10 "}
equipment
params
c
equipment
equipment[key]
 order_equipment[key]
equipment
params
      #   order_equipments << order_equipment
      # endif order_equipment.save!
      #   order_equipments << order_equipment
if order_equipment.save!
c
key
c
equipment
equipment[keys]
equipment[key]
equipment
equipment.key
equipment.keys
equipment
key
c
params[:order_equipments].values.first.class
params[:order_equipments].values.first
params[:order_equipments].values
params[:order_equipments].keys
params[:order_equipments]
order_equipment[key] 
key
n
order_equipment[key] = 10
value
key
order_equipment[key] = value
equipment
order_equipment.order_id = order_id
order_equipment = self.new
paramsorder_equipment = self.new
params
c
params[:order_equipments]
params
self
c
params
c
params
c
          @first_equipment = "#{@equipments.first.model}" + "($"  + "#{@equipments.first.price}" + ")"
          @first_equipment = "#{@equipments.first.model}" + "("  + "#{@equipments.first.price}" + ")"
          @first_equipment = "#{@equipments.first.model}"  + "#{@equipments.first.price}" + ")"
          @first_equipment = "#{@equipments.first.model}""  + "#{@equipments.first.price}" + ")"
          @first_equipment = "#{@equipments.first.model}"" + "($" + "#{@equipments.first.price}" + ")"
 @equipments.first.model + "($" + @equipments.first.price + ")"
          @first_equipment = "@equipments.first.model" + "($" + "@equipments.first.price" + ")"
          @equipments =@deal.deal_equipments
          @effective_price = params[:effective_price]
          @deal = Deal.find_by_id(148)
params
c
@deal_equipment
render :json=>{:status=>@deal_eqipment}
    @deal_equipment =  @deal.deal_equipments.collect{|p| "#{p.model} #{p.price}"}
    @deal = Deal.find(params[:id])
params
parmas
parma
c
render :json=>{:status=>"equipment",:ff=>@deal_eqipment}
render :json=>{:status=>"equipment",:status=>@deal_eqipment}
    @deal_equipment =  @deal.deal_equipments.collect{|p| "#{p.model} #{p.price}"}
    @deal = Deal.find(params[:id])
params
c
    @deal.deal_equipments.collect{|p| "#{p.model} #{p.price}"}
    @deal = Deal.find(params[:id])
deal
@profiles = CellphoneEquipment.all.collect{|p| "#{p.model} #{p.price}"}
@profiles = CellphoneEquipment.all.collect{|p| "#{p.model}, #{p.price}"}
@profiles = CellphoneEquipment.all.collect{|p| "#{p.model} #{p.price}"}
@profiles = CellphoneEquipment.all.map{|p| "#{p.model} #{p.price}"}
@profiles = CellphoneEquipment.all.map{|p| "#{p.users_firstname} #{p.users_lastname}"}
a.deal_equipments.collect(&:model)
a.deal_equipments.collect(&:model,:price)
a.deal_equipments.collect(&:model)
a.deal_equipments
a =Deal.find(params[:id])
Deal.find(params[:id])
Deal.find(params[:id]
Deal.find(pramas[:id])
Deal.find(prams[:id])
params[:id]
params
c
params
c
DealEquipment
DealEquipment.last
DealEquipment
@deal.deal_equipments
@deal.deal_equipment
@deal
params
c
user_type = params[:app_user][:user_type].present? ? params[:app_user][:user_type] : nil
params
c
render :status => 200,:json => {:success => true,:order => order.as_json,:order_items => order_items.as_json,:app_user => app_user.as_json,:app_user_addresses => app_user_addresses.as_json,:gifts => gifts.as_json(:methods => :gift_image_url, :except => :image)}
gifts = Gift.all
UserGift.delay.create_user_gift(order.id)
OrderMailer.delay.order_confirmation(app_user,order)
app_user_addresses = AppUserAddress.create_app_user_addresses(params,app_user.id)
user_type == AppUser::BUSINESS
order_addresses = OrderAddress.create_order_addresses(params,order.id)
app_user = AppUser.update_app_user(params,order.app_user_id,order)
order_items = OrderItem.create_order_items(params,order.id)
 order.save
order.order_id=rand(36**8).to_s(36).upcase
order = Order.new(order_params)
[AppUser::RESIDENCE,AppUser::BUSINESS].include?(user_type)
user_type = params[:app_user][:user_type].present? ? params[:app_user][:user_type] : nil
params
c
effective_price.to_f
effective_price.to_i
effective_price
effective_price != self.deal_price.to_f
self.additional_offers.present?
      effective_price+=equipment.price
equipment.present?
    effective_price=self.deal_price.to_f
    equipment=internet.internet_equipments.first
    internet=self.internet_deal_attributes.first
self.telephone_deal_attributes.present?
self.internet_deal_attributes.present?
self
params
c
params
c
params
c
params
c
params
c
params
c
params
c
CellphoneDealAttribute.where(deal_id: 126).where(no_of_lines: 3).first.effective_price
CellphoneDealAttribute.where(deal_id: 126).where(no_of_lines: 3).first
CellphoneDealAttribute.where(deal_id: 126).where(no_of_lines: 3)
CellphoneDealAttribute.where(deal_id: @deal.id).where(no_of_lines: no_of_lines)
CellphoneDealAttribute.where(deal_id: 126).where(no_of_lines: 3)
CellphoneDealAttribute.where(deal_id: 126)
CellphoneDealAttribute.last
CellphoneDealAttribute.all
CellphoneDealAttribute
        CellphoneServicePreference.find_by(service_preference_id: service_preference_id).no_of_lines
        CellphoneServicePreference.find_by(service_preference_id: service_preference_id)
        CellphoneServicePreference.where(service_preference_id: service_preference_id)
        CellphoneServicePreference.where(id: service_preference_id)
        service_preference_id = service_preference.id
        service_preference = @app_user.service_preferences.where(service_category_id =4).first
@deal.service_category_id == 4 && @app_user.service_preferences.present?
@deal.service_category_id == 4 && @app_user.service_preference.present?
